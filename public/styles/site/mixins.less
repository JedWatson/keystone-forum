/*
	Mixins
	==============================
	
	Helpers to pump out CSS. https://github.com/JossMackison/less-mixins
	
	* fill-space
	* scrollable
	* inline-align
	* button-base
*/




/*
  Fill Space
  ====================

  Element will fill all available vertical and horizontal space provided by it's parent

  Notes
  --------------------
  * Apply attribute "auto" to either top / bottom if the element has a height
  * Apply attribute "auto" to either left / right if the element has a width

*/
.fill-space(@top:0,@right:0,@bottom:0,@left:0) {
	position: absolute;
	bottom: @bottom;
	left: @left;
	right: @right;
	top: @top;
}





/*
  Scrollable
  ====================

  Areas will sometimes lose their ability to scroll when manipulated, particularly iOS.
  This mixin will re-introduce correct scrolling behaviour

  Notes
  --------------------
  * Use the variables "x,y" to indicate which direction you want to be able to scroll

*/
.scrollable(@direction) {
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	-moz-overflow-scrolling: touch;
	-o-overflow-scrolling: touch;
	-ms-overflow-scrolling: touch;
	overflow-scrolling: touch;
}
.scrollable(@direction) when(@direction = x) {
	overflow: hidden;
	overflow-x: auto;
}
.scrollable(@direction) when(@direction = y) {
	overflow: hidden;
	overflow-y: auto;
}





/*
	Inline align
	====================

	Element will align with it's siblings along a lateral axis

	Notes
	====================
	* Defaults to middle
	* Other options
		- baseline / sub / super / top / text-top / middle / bottom / text-bottom / inherit

*/
.inline-align(@alignment:middle) {
	display: inline-block;
	vertical-align: @alignment;
}




// Button variants
// =========================

// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

.button-base(@color; @background; @border;) {
	#gradient .vertical( lighten(@background,2%), darken(@background,2%) );
	color: @color;
	background-color: @background;
	border-color: lighten(@border, 5%) @border darken(@border, 5%);

	&:hover,
	&:focus {
		#gradient .vertical( lighten(@background,5%), darken(@background,0%) );
		color: @color;
		background-color: lighten(@background, 5%);
		border-color: lighten(@border, 10%) lighten(@border, 5%) lighten(@border, 0%);
	}
	&:active,
	&.active,
	.open .dropdown-toggle& {
		.box-shadow(inset 0 1px 3px rgba(0,0,0,.125));
		background-image: none;
		background-color: darken(@background, 5%);
		border-color: darken(@border, 15%) darken(@border, 10%) darken(@border, 5%);
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&:active,
		&.active {
		  background-color: @background;
		  border-color: @background;
		}
	}

	.badge {
		color: @background;
		background-color: @color;
	}
}








